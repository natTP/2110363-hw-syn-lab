$date
   Tue Oct 19 13:00:30 2021
$end
$version
  2020.2
$end
$timescale
  1ps
$end
$scope module nano_sc_system $end
$var wire 32 ! p_address [31:0] $end
$var wire 32 " p_data [31:0] $end
$var wire 32 # d_address [31:0] $end
$var wire 1 $ mem_wr $end
$var wire 32 % d_data [31:0] $end
$var reg 1 & clock $end
$var reg 1 ' nreset $end
$scope module CPU $end
$var wire 32 ! p_address [31:0] $end
$var wire 32 " p_data [31:0] $end
$var wire 32 # d_address [31:0] $end
$var wire 1 $ mem_wr $end
$var wire 32 % d_data [31:0] $end
$var wire 1 ( clock $end
$var wire 1 ) nreset $end
$var wire 32 * instruction [31:0] $end
$var wire 6 + opcode [5:0] $end
$var wire 5 , rs [4:0] $end
$var wire 5 - rt [4:0] $end
$var wire 5 . rd [4:0] $end
$var wire 11 / reserved [10:0] $end
$var wire 16 0 imm [15:0] $end
$var wire 26 1 addr [25:0] $end
$var reg 32 2 pc [31:0] $end
$var wire 1 3 sel_addpc $end
$var wire 1 4 sel_pc $end
$var wire 30 5 pc_add [29:0] $end
$var wire 1 6 pc_cout $end
$var wire 30 7 pc_add_b [29:0] $end
$var wire 30 8 addr_zeroext [29:0] $end
$var wire 30 9 pc_new [29:0] $end
$var wire 32 : imm_ext [31:0] $end
$var wire 2 ; ext_ops [1:0] $end
$var reg 1 < z_flag $end
$var reg 1 = c_flag $end
$var wire 1 > reg_wr $end
$var wire 1 ? sel_wr $end
$var wire 1 @ sel_data $end
$var wire 1 A sel_b $end
$var wire 1 B z_new $end
$var wire 1 C c_new $end
$var wire 3 D alu_ops [2:0] $end
$var wire 32 E A [31:0] $end
$var wire 32 F B [31:0] $end
$var wire 32 G data_selected [31:0] $end
$var wire 32 H data_S [31:0] $end
$var wire 32 I data_M [31:0] $end
$var wire 32 J B_selected [31:0] $end
$var wire 5 K rw [4:0] $end
$scope module PCADDER $end
$var wire 30 5 S [29:0] $end
$var wire 1 6 Cout $end
$var wire 30 L A [29:0] $end
$var wire 30 7 B [29:0] $end
$var wire 1 M Cin $end
$upscope $end
$scope module MUXADDPC $end
$var wire 30 7 out [29:0] $end
$var wire 30 N in0 [29:0] $end
$var wire 30 O in1 [29:0] $end
$var wire 1 3 sel $end
$upscope $end
$scope module MUXSELPC $end
$var wire 30 9 out [29:0] $end
$var wire 30 5 in0 [29:0] $end
$var wire 30 8 in1 [29:0] $end
$var wire 1 4 sel $end
$upscope $end
$scope module EXTENDER $end
$var reg 32 P data32 [31:0] $end
$var wire 16 0 data16 [15:0] $end
$var wire 2 ; ext_ops [1:0] $end
$upscope $end
$scope module MUXRW $end
$var wire 5 K out [4:0] $end
$var wire 5 . in0 [4:0] $end
$var wire 5 - in1 [4:0] $end
$var wire 1 ? sel $end
$upscope $end
$scope module REGFILE $end
$var wire 32 E A [31:0] $end
$var wire 32 F B [31:0] $end
$var wire 32 G data [31:0] $end
$var wire 5 , ra [4:0] $end
$var wire 5 - rb [4:0] $end
$var wire 5 K rw [4:0] $end
$var wire 1 Q nwr $end
$var wire 1 ( clock $end
$var integer 32 R i $end
$upscope $end
$scope module MUXDATA $end
$var wire 32 G out [31:0] $end
$var wire 32 H in0 [31:0] $end
$var wire 32 I in1 [31:0] $end
$var wire 1 @ sel $end
$upscope $end
$scope module MUXB $end
$var wire 32 J out [31:0] $end
$var wire 32 F in0 [31:0] $end
$var wire 32 : in1 [31:0] $end
$var wire 1 A sel $end
$upscope $end
$scope module ALU $end
$var reg 32 S S [31:0] $end
$var wire 1 B zero $end
$var reg 1 T Cout $end
$var wire 32 E A [31:0] $end
$var wire 32 J B [31:0] $end
$var wire 1 U Cin $end
$var wire 3 D alu_ops [2:0] $end
$upscope $end
$scope module CONTROLUNIT $end
$var reg 1 V sel_pc $end
$var reg 1 W sel_addpc $end
$var reg 1 X sel_wr $end
$var reg 1 Y sel_b $end
$var reg 1 Z sel_data $end
$var reg 1 [ reg_wr $end
$var reg 1 \ mem_wr $end
$var reg 2 ] ext_ops [1:0] $end
$var reg 3 ^ alu_ops [2:0] $end
$var wire 6 + opcode [5:0] $end
$var wire 1 B z_flag $end
$var wire 11 / reserved [10:0] $end
$upscope $end
$upscope $end
$scope module PROGMEM $end
$var wire 32 " data [31:0] $end
$var wire 16 _ address [15:0] $end
$upscope $end
$scope module DATAMEM $end
$var wire 32 % data [31:0] $end
$var wire 16 ` address [15:0] $end
$var wire 1 $ wr $end
$var wire 1 a clock $end
$var reg 32 b data_out [31:0] $end
$var integer 32 c i $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx !
bx "
bx #
x$
bx %
0&
0'
0(
0)
bx *
bx +
bx ,
bx -
bx .
bx /
bx 0
bx 1
bx 2
x3
x4
bx 5
x6
bx 7
b0xxxxxxxxxxxxxxxxxxxxxxxxxx 8
bx 9
bx :
bx ;
x<
x=
x>
x?
x@
xA
xB
xC
bx D
bx E
bx F
bx G
bx H
bx I
bx J
bx K
bx L
1M
b0 N
bx O
bx P
xQ
b100000 R
bx S
xT
xU
xV
xW
xX
xY
xZ
x[
x\
bx ]
bx ^
bx _
bx `
0a
bx b
bx c
$end
#20000
b0 !
b1000000000000000000000000000010 "
b10 #
0$
b1 %
1&
1(
b1000000000000000000000000000010 *
b10000 +
b0 ,
b0 -
b0 .
b10 /
b10 0
b10 1
b0 2
03
04
b1 5
06
b0 7
b10 8
b1 9
b10 :
b0 ;
0<
0=
1>
1?
0@
1A
0B
0C
b10 D
b0 E
b0 F
b10 G
b10 H
b1 I
b10 J
b0 K
b0 L
b10 O
b10 P
0Q
b10 S
0T
0U
0V
0W
1X
1Y
0Z
1[
0\
b0 ]
b10 ^
b0 _
b0 `
1a
b1 b
#40000
0&
0(
0a
#60000
b1 %
1&
1(
b0 2
b10 E
b10 F
b10 J
b10 S
0T
1a
#80000
0&
0(
0a
#100000
b100 !
b1000000001000010000000000000100 "
b100 #
b10 %
1&
1'
1(
1)
b1000000001000010000000000000100 *
b10000 +
b1 ,
b1 -
b0 .
b100 /
b100 0
b1000010000000000000100 1
b100 2
b10 5
06
b0 7
b1000010000000000000100 8
b10 9
b100 :
0B
b0 E
b0 F
b100 G
b100 H
b10 I
b100 J
b1 K
b1 L
b100 O
b100 P
b100 S
0T
b10 ^
b1 _
b1 `
1a
b10 b
#120000
0&
0(
0a
#140000
b1000 !
b100000000010001000000000000 "
b110 #
b10 %
1&
1(
b100000000010001000000000000 *
b1 +
b0 ,
b1 -
b10 .
b0 /
b1000000000000 0
b10001000000000000 1
b1000 2
b11 5
06
b0 7
b10001000000000000 8
b11 9
b1000000000000 :
0?
0A
0B
b0 D
b10 E
b100 F
b110 G
b110 H
b100 J
b10 K
b10 L
b1000000000000 O
b1000000000000 P
b110 S
0T
0V
0W
0X
0Y
0Z
1[
0\
b0 ]
b0 ^
b10 _
b1 `
1a
#160000
0&
0(
0a
#180000
b1100 !
b100001000000001100000000001 "
b10 #
b1 %
1&
1(
b100001000000001100000000001 *
b1 +
b1 ,
b0 -
b11 .
b1 /
b1100000000001 0
b1000000001100000000001 1
b1100 2
b100 5
06
b0 7
b1000000001100000000001 8
b100 9
b1100000000001 :
0B
b1 D
b100 E
b10 F
b10 G
b10 H
b1 I
b10 J
b11 K
b11 L
b1100000000001 O
b1100000000001 P
b10 S
0T
b1 ^
b11 _
b0 `
1a
b1 b
#200000
0&
0(
0a
#220000
b10000 !
b100000000010010000000000010 "
b110 #
b10 %
1&
1(
b100000000010010000000000010 *
b1 +
b0 ,
b1 -
b100 .
b10 /
b10000000000010 0
b10010000000000010 1
b10000 2
b101 5
06
b0 7
b10010000000000010 8
b101 9
b10000000000010 :
0B
0C
b10 D
b10 E
b100 F
b110 G
b110 H
b10 I
b100 J
b100 K
b100 L
b10000000000010 O
b10000000000010 P
b110 S
0T
b10 ^
b100 _
b1 `
1a
b10 b
#240000
0&
0(
0a
#260000
b10100 !
b100000000010010100000000011 "
b0 #
b1 %
1&
1(
b100000000010010100000000011 *
b1 +
b0 ,
b1 -
b101 .
b11 /
b10100000000011 0
b10010100000000011 1
b10100 2
b110 5
06
b0 7
b10010100000000011 8
b110 9
b10100000000011 :
1B
b11 D
b10 E
b100 F
b0 G
b0 H
b1 I
b100 J
b101 K
b101 L
b10100000000011 O
b10100000000011 P
b0 S
0T
0W
b11 ^
b101 _
b0 `
1a
b1 b
#280000
0&
0(
0a
#300000
b11000 !
b100000000010011000000000100 "
b110 #
b10 %
1&
1(
b100000000010011000000000100 *
b1 +
b0 ,
b1 -
b110 .
b100 /
b11000000000100 0
b10011000000000100 1
b11000 2
b111 5
06
b0 7
b10011000000000100 8
b111 9
b11000000000100 :
1<
0B
b100 D
b110 G
b110 H
b10 I
b100 J
b110 K
b110 L
b11000000000100 O
b11000000000100 P
b110 S
0T
0W
b100 ^
b110 _
b1 `
1a
b10 b
#320000
0&
0(
0a
#340000
b11100 !
b100000000010011100000000101 "
b11111111111111111111111111111110 #
bx %
1&
1(
b100000000010011100000000101 *
b1 +
b0 ,
b1 -
b111 .
b101 /
b11100000000101 0
b10011100000000101 1
b11100 2
b1000 5
06
b0 7
b10011100000000101 8
b1000 9
b11100000000101 :
0<
0B
b101 D
b10 E
b100 F
b11111111111111111111111111111110 G
b11111111111111111111111111111110 H
bx I
b100 J
b111 K
b111 L
b11100000000101 O
b11100000000101 P
b11111111111111111111111111111110 S
0T
b101 ^
b111 _
b1111111111111111 `
1a
bx b
#360000
0&
0(
0a
#380000
b100000 !
b100000000010100000000000110 "
b11111111111111111111111111111101 #
1&
1(
b100000000010100000000000110 *
b1 +
b0 ,
b1 -
b1000 .
b110 /
b100000000000110 0
b10100000000000110 1
b100000 2
b1001 5
06
b0 7
b10100000000000110 8
b1001 9
b100000000000110 :
0B
b110 D
b10 E
b100 F
b11111111111111111111111111111101 G
b11111111111111111111111111111101 H
b100 J
b1000 K
b1000 L
b100000000000110 O
b100000000000110 P
b11111111111111111111111111111101 S
0T
b110 ^
b1000 _
b1111111111111111 `
1a
#400000
0&
0(
0a
#420000
b100100 !
bx "
bx #
bx %
1&
1(
bx *
bx +
bx ,
bx -
bx .
bx /
bx 0
bx 1
b100100 2
b1010 5
06
b0 7
b0xxxxxxxxxxxxxxxxxxxxxxxxxx 8
b1010 9
b0xxxxxxxxxxxxxxxx :
0>
xB
xC
b0 D
bx E
bx F
bx G
bx H
bx J
bx K
b1001 L
b0xxxxxxxxxxxxxxxx O
b0xxxxxxxxxxxxxxxx P
1Q
bx S
xT
0V
0W
0X
0Y
0Z
0[
0\
b0 ]
b0 ^
b1001 _
bx `
1a
bx b
#440000
0&
0(
0a
#460000
b101000 !
bx "
1&
1(
b101000 2
b1011 5
06
b1011 9
x<
x=
b1010 L
xU
b1010 _
1a
#480000
0&
0(
0a
#500000
b101100 !
bx "
1&
1(
b101100 2
b1100 5
06
b1100 9
b1011 L
b1011 _
1a
#520000
0&
0(
0a
#540000
b110000 !
bx "
1&
1(
b110000 2
b1101 5
06
b1101 9
b1100 L
b1100 _
1a
#560000
0&
0(
0a
#580000
b110100 !
bx "
1&
1(
b110100 2
b1110 5
06
b1110 9
b1101 L
b1101 _
1a
#600000
0&
0(
0a
#620000
b111000 !
bx "
1&
1(
b111000 2
b1111 5
06
b1111 9
b1110 L
b1110 _
1a
#640000
0&
0(
0a
#660000
b111100 !
bx "
1&
1(
b111100 2
b10000 5
06
b10000 9
b1111 L
b1111 _
1a
#680000
0&
0(
0a
#700000
b1000000 !
bx "
1&
1(
b1000000 2
b10001 5
06
b10001 9
b10000 L
b10000 _
1a
#720000
0&
0(
0a
#740000
b1000100 !
bx "
1&
1(
b1000100 2
b10010 5
06
b10010 9
b10001 L
b10001 _
1a
#760000
0&
0(
0a
#780000
b1001000 !
bx "
1&
1(
b1001000 2
b10011 5
06
b10011 9
b10010 L
b10010 _
1a
#800000
0&
0(
0a
#820000
b1001100 !
bx "
1&
1(
b1001100 2
b10100 5
06
b10100 9
b10011 L
b10011 _
1a
#840000
0&
0(
0a
#860000
b1010000 !
bx "
1&
1(
b1010000 2
b10101 5
06
b10101 9
b10100 L
b10100 _
1a
#880000
0&
0(
0a
#900000
b1010100 !
bx "
1&
1(
b1010100 2
b10110 5
06
b10110 9
b10101 L
b10101 _
1a
#920000
0&
0(
0a
#940000
b1011000 !
bx "
1&
1(
b1011000 2
b10111 5
06
b10111 9
b10110 L
b10110 _
1a
#960000
0&
0(
0a
#980000
b1011100 !
bx "
1&
1(
b1011100 2
b11000 5
06
b11000 9
b10111 L
b10111 _
1a
#1000000
0&
0(
0a
#1020000
b1100000 !
bx "
1&
1(
b1100000 2
b11001 5
06
b11001 9
b11000 L
b11000 _
1a
#1040000
0&
0(
0a
#1060000
b1100100 !
bx "
1&
1(
b1100100 2
b11010 5
06
b11010 9
b11001 L
b11001 _
1a
#1080000
0&
0(
0a
#1100000
b1101000 !
bx "
1&
1(
b1101000 2
b11011 5
06
b11011 9
b11010 L
b11010 _
1a
#1120000
0&
0(
0a
#1140000
b1101100 !
bx "
1&
1(
b1101100 2
b11100 5
06
b11100 9
b11011 L
b11011 _
1a
#1160000
0&
0(
0a
#1180000
b1110000 !
bx "
1&
1(
b1110000 2
b11101 5
06
b11101 9
b11100 L
b11100 _
1a
#1200000
0&
0(
0a
#1220000
b1110100 !
bx "
1&
1(
b1110100 2
b11110 5
06
b11110 9
b11101 L
b11101 _
1a
#1240000
0&
0(
0a
#1260000
b1111000 !
bx "
1&
1(
b1111000 2
b11111 5
06
b11111 9
b11110 L
b11110 _
1a
#1280000
0&
0(
0a
#1300000
b1111100 !
bx "
1&
1(
b1111100 2
b100000 5
06
b100000 9
b11111 L
b11111 _
1a
#1320000
0&
0(
0a
#1340000
b10000000 !
bx "
1&
1(
b10000000 2
b100001 5
06
b100001 9
b100000 L
b100000 _
1a
#1360000
0&
0(
0a
#1380000
b10000100 !
bx "
1&
1(
b10000100 2
b100010 5
06
b100010 9
b100001 L
b100001 _
1a
#1400000
0&
0(
0a
#1420000
b10001000 !
bx "
1&
1(
b10001000 2
b100011 5
06
b100011 9
b100010 L
b100010 _
1a
#1440000
0&
0(
0a
#1460000
b10001100 !
bx "
1&
1(
b10001100 2
b100100 5
06
b100100 9
b100011 L
b100011 _
1a
#1480000
0&
0(
0a
#1500000
b10010000 !
bx "
1&
1(
b10010000 2
b100101 5
06
b100101 9
b100100 L
b100100 _
1a
#1520000
0&
0(
0a
#1540000
b10010100 !
bx "
1&
1(
b10010100 2
b100110 5
06
b100110 9
b100101 L
b100101 _
1a
#1560000
0&
0(
0a
#1580000
b10011000 !
bx "
1&
1(
b10011000 2
b100111 5
06
b100111 9
b100110 L
b100110 _
1a
#1600000
0&
0(
0a
#1620000
b10011100 !
bx "
1&
1(
b10011100 2
b101000 5
06
b101000 9
b100111 L
b100111 _
1a
#1640000
0&
0(
0a
#1660000
b10100000 !
bx "
1&
1(
b10100000 2
b101001 5
06
b101001 9
b101000 L
b101000 _
1a
#1680000
0&
0(
0a
#1700000
b10100100 !
bx "
1&
1(
b10100100 2
b101010 5
06
b101010 9
b101001 L
b101001 _
1a
#1720000
0&
0(
0a
#1740000
b10101000 !
bx "
1&
1(
b10101000 2
b101011 5
06
b101011 9
b101010 L
b101010 _
1a
#1760000
0&
0(
0a
#1780000
b10101100 !
bx "
1&
1(
b10101100 2
b101100 5
06
b101100 9
b101011 L
b101011 _
1a
#1800000
0&
0(
0a
#1820000
b10110000 !
bx "
1&
1(
b10110000 2
b101101 5
06
b101101 9
b101100 L
b101100 _
1a
#1840000
0&
0(
0a
#1860000
b10110100 !
bx "
1&
1(
b10110100 2
b101110 5
06
b101110 9
b101101 L
b101101 _
1a
#1880000
0&
0(
0a
#1900000
b10111000 !
bx "
1&
1(
b10111000 2
b101111 5
06
b101111 9
b101110 L
b101110 _
1a
#1920000
0&
0(
0a
#1940000
b10111100 !
bx "
1&
1(
b10111100 2
b110000 5
06
b110000 9
b101111 L
b101111 _
1a
#1960000
0&
0(
0a
#1980000
b11000000 !
bx "
1&
1(
b11000000 2
b110001 5
06
b110001 9
b110000 L
b110000 _
1a
#2000000
0&
0(
0a
#2020000
b11000100 !
bx "
1&
1(
b11000100 2
b110010 5
06
b110010 9
b110001 L
b110001 _
1a
#2040000
0&
0(
0a
#2060000
b11001000 !
bx "
1&
1(
b11001000 2
b110011 5
06
b110011 9
b110010 L
b110010 _
1a
#2080000
0&
0(
0a
